
package com.mycompany.conjuntoresidencial.igu;

import com.mycompany.conjuntoresidencial.logica.Apartamento;
import com.mycompany.conjuntoresidencial.logica.Controladora;
import java.awt.Cursor;
import java.awt.Graphics;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import javax.swing.table.TableRowSorter;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import  javax.swing.RowFilter;
import javax.swing.table.TableModel;



public class VerDatos extends javax.swing.JFrame {

    /**
     * Creates new form VerDatos
     */
    
    Controladora control = null;
    
    private  TableRowSorter trsfiltro;
    String filtro;
    

    @Override
    public void setCursor(Cursor cursor) {
        super.setCursor(cursor); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
    }

    @Override
    public Cursor getCursor() {
        return super.getCursor(); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
    }

    @Override
    public Graphics getGraphics() {
        return super.getGraphics(); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
    }
    
    
    public VerDatos() {
        control = new Controladora();
        
        initComponents();  
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblApartamentos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnMenu = new javax.swing.JButton();
        btnDetalle = new javax.swing.JButton();
        cmbBusqueda = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jblBuscarNombre = new javax.swing.JLabel();
        txtBuscarNombre = new javax.swing.JTextField();
        jblBuscarTorre = new javax.swing.JLabel();
        txtBuscarTorre = new javax.swing.JTextField();
        btnBorrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel2.setText("Visualizacion de Datos");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblApartamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblApartamentos);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Datos de Apartamentos:");

        btnEliminar.setIcon(new javax.swing.ImageIcon("C:\\Users\\Usuario\\Documents\\Proyectos Portafolio\\ConjuntoResidencial\\img\\eliminar.png")); // NOI18N
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon("C:\\Users\\Usuario\\Documents\\Conceptos y Ejercicios Java\\peluqeriacanina\\img\\editar.png")); // NOI18N
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnMenu.setIcon(new javax.swing.ImageIcon("C:\\Users\\Usuario\\Documents\\Conceptos y Ejercicios Java\\peluqeriacanina\\img\\menu.png")); // NOI18N
        btnMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        btnDetalle.setText("Ver Detalle");
        btnDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetalleActionPerformed(evt);
            }
        });

        cmbBusqueda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Nombre Residente", "Torre" }));
        cmbBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBusquedaActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("Buscar por:");

        jblBuscarNombre.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jblBuscarNombre.setText("Digite Nombre:");

        txtBuscarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarNombreActionPerformed(evt);
            }
        });
        txtBuscarNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarNombreKeyTyped(evt);
            }
        });

        jblBuscarTorre.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jblBuscarTorre.setText("Digite Torre:");

        txtBuscarTorre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarTorreActionPerformed(evt);
            }
        });
        txtBuscarTorre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarTorreKeyTyped(evt);
            }
        });

        btnBorrar.setIcon(new javax.swing.ImageIcon("C:\\Users\\Usuario\\Documents\\Proyectos Portafolio\\ConjuntoResidencial\\img\\cerrar.png")); // NOI18N
        btnBorrar.setBorder(null);
        btnBorrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(btnDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(cmbBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jblBuscarNombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBuscarNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jblBuscarTorre, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscarTorre, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1083, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnMenu, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                            .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(23, 23, 23))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(jblBuscarNombre)
                        .addComponent(txtBuscarNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jblBuscarTorre)
                        .addComponent(txtBuscarTorre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnDetalle)
                        .addComponent(jLabel1)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(btnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(434, 434, 434)
                        .addComponent(jLabel2)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addGap(31, 31, 31)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        // TODO add your handling code here:
        Principal pantalla = new Principal();
        pantalla.setVisible(true);
        pantalla.setLocationRelativeTo(null);
        this.dispose();

    }//GEN-LAST:event_btnMenuActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.txtBuscarTorre.setVisible(false);    
        this.jblBuscarTorre.setVisible(false);
        this.txtBuscarNombre.setVisible(false);
        this.jblBuscarNombre.setVisible(false);
        this.btnBorrar.setVisible(false);
        cargarTabla();
    }//GEN-LAST:event_formWindowOpened

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        
        //Controlo que la tabla no este vacia
        if (tblApartamentos.getRowCount()>0){
            
            // Controlo que se haya seleccionado una fila
            if (tblApartamentos.getSelectedRow()!=-1){
                
                // De la tabla Apartamentos traer el valor, que esta en la columna 0 de la fila seleccionada, convirtiendolo a String y luego a Integer
                int id_Apto = Integer.parseInt(String.valueOf(tblApartamentos.getValueAt(tblApartamentos.getSelectedRow(), 0)));
                
                // Llamado al metodo borrar
                control.borrarApartamento(id_Apto);
                
                
                // Creacion de mensaje de alerta
                mostrarMensaje("apartamento eliminado correctamente", "Info", "Borrado de Apartamento");     
                
                cargarTabla();
            }
            else{
                mostrarMensaje("No selecciono ningun apartamento", "Error", "Error al eliminar");             
            }
        }
        else{
            mostrarMensaje("No hay nada para eliminar en la tabla", "Error", "Error al eliminar");             
        }
        
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // Editar
        
        //Controlo que la tabla no este vacia
        if (tblApartamentos.getRowCount()>0){
            
            // Controlo que se haya seleccionado una fila
            if (tblApartamentos.getSelectedRow()!=-1){
                
                //Obtengo el id del apto a editar
                int id_Apto = Integer.parseInt(String.valueOf(tblApartamentos.getValueAt(tblApartamentos.getSelectedRow(), 0)));
                          
               EditDatos pantallaEditar= new EditDatos(id_Apto);
               pantallaEditar.setVisible(true);
               pantallaEditar.setLocationRelativeTo(null);
                
                this.dispose();   
                
            }
        
        else{
                mostrarMensaje("No selecciono ningun apartamento", "Error", "Error al editar");             
            }
        }
        else{
            mostrarMensaje("No hay nada para editar en la tabla", "Error", "Error al editar");            
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void txtBuscarTorreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarTorreKeyTyped
        // TODO add your handling code here:
        
        trsfiltro = new TableRowSorter(tblApartamentos.getModel());
        tblApartamentos.setRowSorter(trsfiltro);
        
    }//GEN-LAST:event_txtBuscarTorreKeyTyped

    private void txtBuscarTorreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarTorreActionPerformed
        // TODO add your handling code here:
       
        
    }//GEN-LAST:event_txtBuscarTorreActionPerformed

    private void btnDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetalleActionPerformed
            // Detalle
        
        //Controlo que la tabla no este vacia
        if (tblApartamentos.getRowCount()>0){
            
            // Controlo que se haya seleccionado una fila
            if (tblApartamentos.getSelectedRow()!=-1){
                
                //Obtengo el id del apto a editar
                int id_Apto = Integer.parseInt(String.valueOf(tblApartamentos.getValueAt(tblApartamentos.getSelectedRow(), 0)));
                          
               MostrarApato pantalladetalle= new MostrarApato(id_Apto);
               pantalladetalle.setVisible(true);
               pantalladetalle.setLocationRelativeTo(null);
                
                this.dispose();   
                
            }
        
        else{
                mostrarMensaje("No selecciono ningun apartamento", "Error", "Error al visualizar");             
            }
        }
        else{
            mostrarMensaje("No hay nada para visualizar en la tabla", "Error", "Error al visualizar");            
        }
        
        
    }//GEN-LAST:event_btnDetalleActionPerformed

    private void txtBuscarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarNombreActionPerformed

    private void txtBuscarNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarNombreKeyTyped
        // TODO add your handling code here:
        trsfiltro = new TableRowSorter(tblApartamentos.getModel());
        tblApartamentos.setRowSorter(trsfiltro);
        
        
        
        
    }//GEN-LAST:event_txtBuscarNombreKeyTyped

    private void cmbBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbBusquedaActionPerformed
        // TODO add your handling code here:
        String valor = (String) cmbBusqueda.getSelectedItem();
        
        if( valor.equals("Torre")){
            txtBuscarTorre.setVisible(true);
            jblBuscarTorre.setVisible(true);
            txtBuscarNombre.setVisible(false);
            jblBuscarNombre.setVisible(false);
            btnBorrar.setVisible(true);
            txtBuscarTorre.requestFocus();
            
            
            txtBuscarTorre.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased (final KeyEvent e){
                String cadena = txtBuscarTorre.getText();
                txtBuscarTorre.setText(cadena);
                repaint();
                filtroTorre();
            }
        });
        }
        if(valor.equals("Nombre Residente")){
           txtBuscarNombre.setVisible(true);
           jblBuscarNombre.setVisible(true);
           txtBuscarTorre.setVisible(false);
           jblBuscarTorre.setVisible(false);
           btnBorrar.setVisible(true);
           txtBuscarNombre.requestFocus();
           
           txtBuscarNombre.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased (final KeyEvent e){
                String cadena = txtBuscarNombre.getText();
                txtBuscarNombre.setText(cadena);
                repaint();
                filtroNombre();
            }
        });
        } 
        
        if(valor.equals("Seleccionar")){
           txtBuscarNombre.setVisible(false);
           jblBuscarNombre.setVisible(false);
           txtBuscarTorre.setVisible(false);
           jblBuscarTorre.setVisible(false);
           btnBorrar.setVisible(false);
        }
        
    }//GEN-LAST:event_cmbBusquedaActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        // TODO add your handling code here:
        txtBuscarNombre.setText("");
        txtBuscarTorre.setText("");
              
       VerDatos verDatos = new VerDatos();
       verDatos.setVisible(true);
       verDatos.setLocationRelativeTo(null);
       this.dispose();
    }//GEN-LAST:event_btnBorrarActionPerformed

    public void filtroTorre(){
    filtro = txtBuscarTorre.getText();
    trsfiltro.setRowFilter(RowFilter.regexFilter(txtBuscarTorre.getText(), 2));
    }
    
    public void filtroNombre(){
    filtro = txtBuscarNombre.getText();
    trsfiltro.setRowFilter(RowFilter.regexFilter(txtBuscarNombre.getText().toUpperCase(), 3));
    }
    
    
    
    public void mostrarMensaje(String mensaje,String tipo,String titulo){
        
        JOptionPane optionPane = new JOptionPane(mensaje);
        if (tipo.equals("Info")){
            optionPane.setMessageType(JOptionPane.INFORMATION_MESSAGE);
        }
        else if(tipo.equals("Error")){
            optionPane.setMessageType(JOptionPane.ERROR_MESSAGE);
        }
        JDialog dialog = optionPane.createDialog(titulo);
        dialog.setAlwaysOnTop(true);
        dialog.setVisible(true);    
    }
    
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnDetalle;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnMenu;
    private javax.swing.JComboBox<String> cmbBusqueda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jblBuscarNombre;
    private javax.swing.JLabel jblBuscarTorre;
    private javax.swing.JTable tblApartamentos;
    private javax.swing.JTextField txtBuscarNombre;
    private javax.swing.JTextField txtBuscarTorre;
    // End of variables declaration//GEN-END:variables

    public void cargarTabla() {
        
        // Definir el modelo de la tabla
        
        DefaultTableModel modeloTabla = new DefaultTableModel(){
            
            //Que las filas y columnas no sean editables
            @Override
            public boolean isCellEditable(int row, int column){
                return false;
            }
            
        };
        
        
       
      // Establecer las columnas
        
        String titulos[]={"Num", "Apto","Torre","Residente 1","Residente 2","Propietario", "Arrendatario",
                            "Nom Propietario"};
        
        /*String titulos[]={"Num", "Apto","Torre","Residente 1","Cel.Resi 1","Residente 2", "Cel.Resi 2", "Propietario", "Arrendatario",
                            "Nom Propietario", "Cel 1", "Cel 2", "Observaciones"};*/
        
        modeloTabla.setColumnIdentifiers(titulos);
        
       // Carga los datos desde la base de datos
       
         List <Apartamento> listaApartamentos = control.traerapartamentos();
         
       
       // Recorrer las lista y mostrar cada uno de los elementos de la tabla
       
        if (listaApartamentos!=null){
            //por cada apartamento de la lista apartamentos
            for(Apartamento apto:listaApartamentos){
                Object[] objeto = {apto.getIdApto(),apto.getNumApto(),apto.getTorre(),apto.getResidente1(),apto.getResidente2(), 
                apto.getPropietario(), apto.getArrendatario(),apto.getUnPropietario().getNombrePropietario()};
                
                /*Object[] objeto = {apto.getIdApto(),apto.getNumApto(),apto.getTorre(),apto.getResidente1(),apto.getCelRes1(),apto.getResidente2(), apto.getCelRes2(),
                apto.getPropietario(), apto.getArrendatario(),apto.getUnPropietario().getNombrePropietario(),apto.getUnPropietario().getCel1Propietario(),
                apto.getUnPropietario().getCel2Propietario(),apto.getObservaciones()};*/
                
                modeloTabla.addRow(objeto);
            
            }
        }
        
        
        tblApartamentos.setModel(modeloTabla);
        
        TableRowSorter<TableModel> trs = new TableRowSorter<TableModel>(modeloTabla);
        tblApartamentos.setRowSorter(trs);
                
    }
}
